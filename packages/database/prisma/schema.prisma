generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id            String         @id @default(uuid())
  username      String         @unique
  email         String         @unique
  password      String
  cgpa          Float
  currentYear   Int
  allottedRoom  AllottedRooms?
  groupMember   GroupMember?
  Institution   Institution    @relation(fields: [institutionId], references: [id])
  institutionId String
}

model Hostel {
  id            String          @id @default(uuid())
  name          String          @unique
  allottedRooms AllottedRooms[]
  Room          Room[]
  Institution   Institution     @relation(fields: [institutionId], references: [id])
  institutionId String
}

model AllottedRooms {
  id            String      @id @default(uuid())
  hostel        Hostel      @relation(fields: [hostelId], references: [id])
  hostelId      String
  student       Student     @relation(fields: [studentId], references: [id])
  studentId     String      @unique
  room          Room        @relation(fields: [roomId], references: [id])
  roomId        String      @unique
  allottedAt    DateTime    @default(now())
  Institution   Institution @relation(fields: [institutionId], references: [id])
  institutionId String
}

model Group {
  id            String        @id @default(uuid())
  name          String        @unique
  studentYear   Int
  members       GroupMember[]
  Institution   Institution   @relation(fields: [institutionId], references: [id])
  institutionId String
}

model GroupMember {
  id           String  @id @default(uuid())
  group        Group   @relation(fields: [groupId], references: [id])
  groupId      String
  student      Student @relation(fields: [studentId], references: [id])
  studentId    String  @unique
  isGroupAdmin Boolean @default(false)
}

model Admin {
  id            String      @id @default(uuid())
  username      String
  email         String      @unique
  institute     Institution @relation(fields: [institutionId], references: [id])
  instituteId   String
  password      String
  institutionId String
}

model Room {
  id            String          @id @default(uuid())
  roomName      String          @unique
  capacity      Int
  AllottedRooms AllottedRooms[]
  hostel        Hostel          @relation(fields: [hostelId], references: [id])
  hostelId      String
  Institution   Institution     @relation(fields: [institutionId], references: [id])
  institutionId String
}

model Institution {
  id            String          @id @default(uuid())
  name          String          @unique
  students      Student[]
  hostels       Hostel[]
  rooms         Room[]
  allottedRooms AllottedRooms[]
  admins        Admin[]
  groups        Group[]
}
